Microsoft.CodeAnalysis.ExternalAccess.Xaml.Commands.IXamlCommandService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.Commands.IXamlCommandService.ExecuteCommandAsync(Microsoft.CodeAnalysis.TextDocument! document, string! command, object![]? commandArguments, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<bool>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.DataId.get -> long
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.DataId.init -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.DataIdResolveData(long DataId, long DocumentId) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.DataIdResolveData(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData! original) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.Deconstruct(out long DataId, out long DocumentId) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DescriptionService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DescriptionService.DescriptionService(Microsoft.CodeAnalysis.Options.IGlobalOptionService! globalOptions) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DescriptionService.GetDescriptionAsync(Microsoft.CodeAnalysis.ISymbol! symbol, Microsoft.CodeAnalysis.Project! project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.TaggedText>!>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DescriptionService.GetMarkupContent(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText> tags, string! language, bool featureSupportsMarkdown) -> Microsoft.VisualStudio.LanguageServer.Protocol.MarkupContent!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ICapabilityRegistrationsProvider
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ICapabilityRegistrationsProvider.GetRegistrations(Microsoft.VisualStudio.LanguageServer.Protocol.ClientCapabilities! clientCapabilities) -> System.Collections.Immutable.ImmutableArray<Microsoft.VisualStudio.LanguageServer.Protocol.Registration!>
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IDescriptionService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IDescriptionService.GetDescriptionAsync(Microsoft.CodeAnalysis.ISymbol! symbol, Microsoft.CodeAnalysis.Project! project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.TaggedText>!>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IDescriptionService.GetMarkupContent(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText> tags, string! language, bool featureSupportsMarkdown) -> Microsoft.VisualStudio.LanguageServer.Protocol.MarkupContent!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ILocationService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ILocationService.GetLocationAsync(Microsoft.CodeAnalysis.Document! document, Microsoft.CodeAnalysis.Text.TextSpan textSpan, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Location?>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ILocationService.GetSymbolDefinitionLocationsAsync(Microsoft.CodeAnalysis.ISymbol! symbol, Microsoft.CodeAnalysis.Project! project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Location![]!>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveDataService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveDataService.FromResolveData(Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext context, object? resolveData) -> (object? data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier? document)
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveDataService.ToResolveData(Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext context, object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document) -> object!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IXamlRequestHandler<TRequest, TResponse>
Microsoft.CodeAnalysis.ExternalAccess.Xaml.LocationService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.LocationService.GetLocationAsync(Microsoft.CodeAnalysis.Document! document, Microsoft.CodeAnalysis.Text.TextSpan textSpan, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Location?>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.LocationService.GetSymbolDefinitionLocationsAsync(Microsoft.CodeAnalysis.ISymbol! symbol, Microsoft.CodeAnalysis.Project! project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Location![]!>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.LocationService.LocationService(Microsoft.CodeAnalysis.MetadataAsSource.IMetadataAsSourceFileService! metadataAsSourceFileService, Microsoft.CodeAnalysis.Options.IGlobalOptionService! globalOptions) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveDataService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveDataService.FromResolveData(Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext context, object? lspData) -> (object? data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier? document)
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveDataService.ResolveDataService() -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveDataService.ToResolveData(Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext context, object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document) -> object!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlHoverResultCreation
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.ClientCapabilities.get -> Microsoft.VisualStudio.LanguageServer.Protocol.ClientCapabilities!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.GetRequiredLspService<T>() -> T!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.TextDocument.get -> Microsoft.CodeAnalysis.TextDocument?
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.XamlRequestContext() -> void
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.DataId.get -> long
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.DataId.init -> void
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.Deconstruct(out long DataId, out long DocumentId) -> void
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.ResolveData(long DataId, long DocumentId) -> void
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.ResolveData(Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData! original) -> void
Microsoft.VisualStudio.DesignTools.Xaml.IXamlDocumentRequestHandler<TRequest, TResponse>
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.<Clone>$() -> Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentIdResolveData!
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.EqualityContract.get -> System.Type!
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.Equals(object? obj) -> bool
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.GetHashCode() -> int
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.PrintMembers(System.Text.StringBuilder! builder) -> bool
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.ToString() -> string!
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.<Clone>$() -> Microsoft.CodeAnalysis.ExternalAccess.Xaml.DocumentIdResolveData!
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.EqualityContract.get -> System.Type!
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.Equals(object? obj) -> bool
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.GetHashCode() -> int
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.PrintMembers(System.Text.StringBuilder! builder) -> bool
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.ToString() -> string!
override sealed Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.Equals(Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentIdResolveData? other) -> bool
override sealed Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.Equals(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DocumentIdResolveData? other) -> bool
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.operator !=(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? left, Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? right) -> bool
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.operator ==(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? left, Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? right) -> bool
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlHoverResultCreation.CreateHoverAsync(Microsoft.CodeAnalysis.TextDocument! document, Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem! info, Microsoft.VisualStudio.LanguageServer.Protocol.ClientCapabilities! clientCapabilities, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Hover!>!
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.FromRequestContext(Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext context) -> Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext
static Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.operator !=(Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? left, Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? right) -> bool
static Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.operator ==(Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? left, Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? right) -> bool
virtual Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.Equals(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? other) -> bool
virtual Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.Equals(Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? other) -> bool
