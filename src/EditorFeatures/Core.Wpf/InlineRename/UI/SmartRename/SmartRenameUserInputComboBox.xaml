<ComboBox x:Class="Microsoft.CodeAnalysis.InlineRename.UI.SmartRename.SmartRenameUserInputComboBox"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
          xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
          mc:Ignorable="d"
          GotKeyboardFocus="ComboBox_GotKeyboardFocus"
          Unloaded="ComboBox_Unloaded"
          PreviewKeyUp="ComboBox_PreviewKeyUp"
          SelectionChanged="ComboBox_SelectionChanged"
          Text="{Binding IdentifierText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
          ItemsSource="{Binding SmartRenameViewModel.SuggestedNames}"
          StaysOpenOnEdit="True"
          IsEditable="True"
          Style="{StaticResource {x:Static vsfx:VsResourceKeys.ComboBoxStyleKey}}">
    <ComboBox.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../InlineRenameColors.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <SolidColorBrush x:Key="copilotBranding" Color="#6F66E3"/>

            <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ComboBox.Resources>
    <ComboBox.Template>
        <ControlTemplate TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border x:Name="border"
                        Grid.Row="0"
                        Margin="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <vsui:SystemDropShadowChrome x:Name="shadow"
                                                         Color="Transparent"
                                                         MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                         MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="dropDownBorder"
                                        BorderBrush="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxPopupBorderBrushKey}}"
                                        BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid"
                                              RenderOptions.ClearTypeHint="Enabled"
                                              RenderOptions.BitmapScalingMode="{x:Static vsui:DpiHelper.BitmapScalingMode}"
                                              Background="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxPopupBackgroundGradientBrushKey}}">
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            PreviewMouseUp="ItemsPresenter_PreviewMouseUp"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </vsui:SystemDropShadowChrome>
                        </Popup>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Grid.Column="0"
                                 Margin="0"
                                 VerticalAlignment="Center"
                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                 CaretBrush="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"
                                 Foreground="{TemplateBinding Foreground}"
                                 SelectionBrush="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxSelectionBrushKey}}"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                 Style="{StaticResource ComboBoxEditableTextBox}"
                                 GotFocus="InnerTextBox_GotFocus"
                                 LostFocus="InnerTextBox_LostFocus"
                                 PreviewKeyDown="InnerTextBox_PreviewKeyDown"/>
                        <Button x:Name="GetSuggestionsButton"
                                Grid.Column="1"
                                Style="{StaticResource {x:Static vsfx:VsResourceKeys.ButtonStyleKey}}"
                                MinWidth="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                TextElement.Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxGlyphBrushKey}}"
                                Content="✨"
                                Command="{Binding SmartRenameViewModel.GetSuggestionsCommand}"/>
                    </Grid>
                </Border>
                <ProgressBar x:Name="ProgressBar"
                             Grid.Row="1"
                             IsIndeterminate="{Binding Path=SmartRenameViewModel.IsInProgress}"
                             Visibility="{Binding Path=SmartRenameViewModel.IsInProgress, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                             Foreground="{StaticResource copilotBranding}"
                             Background="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarMenuBackgroundGradientBeginKey}}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxFocusedTextBrushKey}}" />
                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxFocusedBackgroundBrushKey}}" />
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxFocusedBorderBrushKey}}" />
                    <Setter TargetName="GetSuggestionsButton" Property="BorderBrush" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxFocusedButtonSeparatorBrushKey}}" />
                    <Setter TargetName="GetSuggestionsButton" Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxFocusedButtonBackgroundBrushKey}}" />
                    <Setter TargetName="GetSuggestionsButton" Property="TextElement.Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxFocusedGlyphBrushKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="GetSuggestionsButton" Property="BorderBrush" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxButtonMouseOverSeparatorBrushKey}}" />
                    <Setter TargetName="GetSuggestionsButton" Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxButtonMouseOverBackgroundBrushKey}}" />
                    <Setter TargetName="GetSuggestionsButton" Property="TextElement.Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverGlyphBrushKey}}" />
                    <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverBackgroundGradientBrushKey}}" />
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverBorderBrushKey}}" />
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverTextBrushKey}}" />
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ComboBox.Template>
</ComboBox>
